{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs28 \cf0 1. We used the diagram that you showed us earlier in class (for the bear, river, fish task) and used it to help us plan out our code. For the most part we stuck to the plan - however as we done some of the extension tasks we had to alter it.\
\
2. I think we stuck to the Single Responsibility principle for everything\'85looking back through our code we\'92ve tried to make sure that one piece of code is only doing one thing. With some of the tests we re-used functions that we had previously made earlier in the task.\
\
3. Yes. We used TDD throughout the whole process. We wrote the test code first and then built the corresponding functions in order to pass the tests.\
\
4. Everything was tested and in working order. We were getting slightly confused as to when you would use @pub / @customer (for example) or when you would call \'91customer.wallet\'92 etc\'85Steve broke it down quite well for us and after that we managed to carry on. The only other part I can remember us struggling with was here:\
\
  def test_get_drink_order\
    @pub.get_drink(@customer2, @drink1)\
    assert_equal(104, @pub.till)\
    assert_equal(11, @customer2.wallet)\
  end\
\
It took us a while to realise that it had to be @pub.get_drink(@customer2, @drink1).\
\
Beforehand we were using @customer.get_drink amongst other things. }